/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.20
 * Generated at: 2016-03-15 08:39:41 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import cn.nubia.rbac.*;
import cn.nubia.rbac.util.*;
import cn.nubia.rbac.model.SysUser;
import cn.nubia.framework.crypto.*;
import cn.nubia.framework.core.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("cn.nubia.rbac");
    _jspx_imports_packages.add("cn.nubia.framework.crypto");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("cn.nubia.rbac.util");
    _jspx_imports_packages.add("cn.nubia.framework.core");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("cn.nubia.rbac.model.SysUser");
  }

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

 
	SysUser user=(SysUser)session.getAttribute(Define.SESSION_IN_USER);
	if(user==null){
		HttpCookie cookie=new HttpCookie(request,response);
		String userId=cookie.getValue(Define.COOKIE_IN_USERID);
		if(userId!=null){
			user=RbacCache.get(RbacDes.decrypt(userId));
			if(user!=null){
				response.sendRedirect(request.getContextPath()+"/workspace/workspace.do");
			}
		}
	}else{
		response.sendRedirect(request.getContextPath()+"/workspace/workspace.do");
	}

      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n");
      out.write("    <meta http-equiv=\"Pragma\" content=\"no-cache\"/>\n");
      out.write("\t<meta http-equiv=\"Cache-Control\" content=\"no-cache\"/>\n");
      out.write("\t<meta http-equiv=\"Expires\" content=\"0\"/>\n");
      out.write("<title>云服务系统</title>\n");
      out.write("<link href=\"res/css/login.css?v=3\" rel=\"stylesheet\">\n");
      out.write("<script src=\"res/jquery.js?v=3\"></script>\n");
      out.write("<script src=\"res/jquery-ui.min.js?v=3\"></script>\n");
      out.write("<script>\n");
      out.write("var cookieName='task_username';\n");
      out.write("//密码填写错误振动；\n");
      out.write("function rock(){}\n");
      out.write("\n");
      out.write("function login(){\n");
      out.write("\tvar frm=$('form:eq(0)'),uv=frm[0].username.value,pv=frm[0].password.value,tip=$('h2:eq(0)');\n");
      out.write("\tif($.trim(uv)==''){\n");
      out.write("\t\t$('#loginDiv').effect(\"shake\", { times:3 }, 100, function(){$('#username').focus();});$('#password').attr(\"value\",\"\");$('#codeDiv .note').show();\n");
      out.write("\t\t\n");
      out.write("\t}else if($.trim(pv)==''){\n");
      out.write("\t\t$('#loginDiv').effect(\"shake\", { times:3 }, 100, function(){$('#password').focus();});$('#password').attr(\"value\",\"\");$('#codeDiv .note').show();\t\t\n");
      out.write("\t}else{\n");
      out.write("\t\t$.post(\"login/check.do\",frm.serialize(),function(r){\t\t\t\t\n");
      out.write("\t\t\tif(r==\"success\"){\n");
      out.write("\t\t\t\t$.cookie.set(cookieName,uv,2678400);\n");
      out.write("\t\t\t\ttop.location.href=\"workspace/workspace.do\";\n");
      out.write("\t\t\t}else if(r==\"username_error\"){\n");
      out.write("\t\t\t\t$('#alert').show();\n");
      out.write("\t\t\t}else if(r==\"password_error\"){\n");
      out.write("\t\t\t\t$('#forget').show();\n");
      out.write("\t\t\t}else{\n");
      out.write("\t\t\t\talert(\"系统出错,信息如下:\"+r);\n");
      out.write("\t\t\t}\n");
      out.write("\t\t});\n");
      out.write("\t}\n");
      out.write("}\n");
      out.write("\n");
      out.write("$(document).ready(function(){\n");
      out.write("\t\n");
      out.write("  var frm=$('form:eq(0)');\n");
      out.write("\tvar username=$.cookie.get(cookieName);\n");
      out.write("\tif(username){\n");
      out.write("\t\tfrm[0].username.value=username;\n");
      out.write("\t\t$('#userDiv .note').hide();\n");
      out.write("\t\t$('#username').focus();\n");
      out.write("\t}else{\n");
      out.write("\t\t$('#password').focus();\n");
      out.write("\t}\n");
      out.write("    frm.keypress(function (e) {\n");
      out.write("        if (e.keyCode == 13){ \n");
      out.write("      \t \tlogin();\n");
      out.write("         \treturn false;\n");
      out.write("        }            \n");
      out.write("    });\n");
      out.write("\tif(top!=self) top.location.href=\"index.jsp\";\n");
      out.write(" //初始化；\n");
      out.write(" $('#alert').hide();\n");
      out.write(" $('#forget').hide();\n");
      out.write("\n");
      out.write(" //\n");
      out.write(" $('#username').focusin(function(){$('#TMark').removeClass('hit');$('#forget').hide();}).focusout(function(){if(this.value==''){$('#userDiv .note').show();};$('#TMark').addClass('hit');}).mouseup(function(){if(this.value!=''){$('#userDiv .note').hide();}});\n");
      out.write(" $('#password').focusin(function(){$('#PMark').removeClass('hit');$('#forget').hide();}).focusout(function(){if(this.value==''){$('#codeDiv .note').show();}$('#PMark').addClass('hit');});\n");
      out.write(" \n");
      out.write(" \n");
      out.write("$('#stay_css,#stay_label').mousedown(function(){if($('#stay_css').attr(\"class\")=='checkBox'){$('#stay_css').addClass('press');$('.stay_label_txt').addClass('blod');$('#stay').attr(\"value\",\"1\");}else{$('#stay_css').addClass('press2');$('.stay_label_txt').removeClass('blod');$('#stay').attr(\"value\",\"0\");} })\n");
      out.write(" \t\t\t.mouseup(function(){$('#stay_css').removeClass('press').removeClass('press2');\n");
      out.write("\t\t\t\t\t\t\t\t\t$('#stay_css').toggleClass('checked').toggleClass('checkBox');});\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n");
      out.write(" $('#submit').mousedown(function(){$('#submit').css(\"background-position\",\"0px -583px\");})\n");
      out.write(" \t\t\t .mouseup(function(){$('#submit').css(\"background-position\",\"0px -555px\");})\n");
      out.write("\t\t\t \n");
      out.write(" $('#username').keydown(function(){$('#userDiv .note').hide();});\n");
      out.write(" $('#password').keydown(function(){$('#codeDiv .note').hide();});\n");
      out.write(" $('#closeA').click(function(){$('#alert').fadeOut();});\n");
      out.write("\n");
      out.write(" //提交；\n");
      out.write(" $('#submit').click(function(){login();})\n");
      out.write("})\n");
      out.write("\n");
      out.write("//cookie\n");
      out.write("$.cookie={\n");
      out.write("    get:function(name){\n");
      out.write("        var a=document.cookie.match(new RegExp(\"(^| )\"+name+\"=([^;]*)(;|$)\"));\n");
      out.write("        return a?unescape(a[2]):null;\n");
      out.write("    },\n");
      out.write("    set:function(name,value,seconds, path, domain, secure) {\n");
      out.write("        var a= new Date();\n");
      out.write("        a.setTime(a.getTime() + seconds);\n");
      out.write("        document.cookie =\n");
      out.write("            escape(name) + '=' + escape(value)\n");
      out.write("            + (a ? '; expires=' + a.toGMTString() : '')\n");
      out.write("            + (path ? '; path=' + path : '/')\n");
      out.write("            + (domain ? '; domain=' + domain : '')\n");
      out.write("            + (secure ? '; secure' : '');\n");
      out.write("    },\n");
      out.write("    clear:function(name) {\n");
      out.write("        var a= new Date();\n");
      out.write("        a.setTime(a.getTime() - 1);\n");
      out.write("        document.cookie= name+'=null;expires='+a.toGMTString();\n");
      out.write("    }\n");
      out.write(" };\n");
      out.write("</script>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("<div id=\"alert\">\n");
      out.write("<h3 id=\"messge\">对不起，您输入的帐号不存在！</h3>\n");
      out.write("</div>\n");
      out.write("<div id=\"wrap\">\n");
      out.write("<div id=\"loginDiv\">\n");
      out.write("<div id=\"logo\"></div>\n");
      out.write("<form>\n");
      out.write("<div id=\"userDiv\">\n");
      out.write("<div id=\"TMark\" class=\"inputMark hit\"></div>\n");
      out.write("<input name=\"username\" id=\"username\" class=\"field\" type=\"text\" maxlength='16' tabindex=\"1\" autocomplete=\"off\">\n");
      out.write("<div class=\"note\" >请输入用户名</div>\n");
      out.write("\n");
      out.write("</div>\n");
      out.write("<div id=\"codeDiv\">\n");
      out.write("<div id=\"PMark\" class=\"inputMark hit\"></div>\n");
      out.write("<input name=\"password\" id=\"password\" class=\"field\" type=\"password\" maxlength='16' tabindex=\"2\">\n");
      out.write("<div class=\"note\">请输入密码</div>\n");
      out.write("\n");
      out.write("<div id=\"submit\" class=\"submit\" title=\"登录\" ></div>\n");
      out.write("<!--密码不正确提示-->\n");
      out.write("<div id=\"forget\">\n");
      out.write("<div id=\"forget_top\"></div>\n");
      out.write("<div id=\"forget_middle\">\n");
      out.write("<div id=\"forget_description\">\n");
      out.write("<dt>你输入的密码不正确</dt>\n");
      out.write("</div>\n");
      out.write("</div>\n");
      out.write("<div id=\"forget_bottom\"></div>\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("<div id=\"remeber\"><input type=\"checkbox\"  id=\"stay\" name=\"stay\" value=\"0\" checked=\"\" hidefocus=\"\" style=\"display:none;\" ><span id=\"stay_css\" class=\"checkBox\" ></span><span id=\"stay_label\" class=\"stay_label_txt\" >记住密码，保持我的登录状态.</span></div>\n");
      out.write("</form>\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("<div id=\"copyright\">2015 © 深圳市努比亚技术有限公司</div>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
