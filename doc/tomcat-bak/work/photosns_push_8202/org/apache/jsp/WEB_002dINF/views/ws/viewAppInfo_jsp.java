/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.20
 * Generated at: 2016-02-02 01:53:42 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.ws;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class viewAppInfo_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("    <meta charset=\"UTF-8\"><meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n");
      out.write("    <title></title>\n");
      out.write("    <link rel=\"stylesheet\" href=\"../res/css/pub.css?v=3\">\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("\t<form>\n");
      out.write("\t\t<input type=\"hidden\" name=\"appId\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${appInfo.appId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" />\n");
      out.write("\t\t<dl>\n");
      out.write("\t\t\t<b>应用包名 <span>*</span></b>\n");
      out.write("\t\t\t<span><input name=\"packageName\" style=\"width:280px;\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${appInfo.packageName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" maxlength=\"64\"/></span>\n");
      out.write("\t\t</dl>\n");
      out.write("\t\t<dl>\n");
      out.write("\t\t\t<b>应用KEY<span>*</span></b>\n");
      out.write("\t\t\t<span><input name=\"appKey\" style=\"width:280px;\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${appInfo.appKey}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" maxlength=\"64\"/></span>\n");
      out.write("\t\t</dl>\n");
      out.write("\t\t<dl>\n");
      out.write("\t\t\t<b>授权码<span>*</span></b>\n");
      out.write("\t\t\t<span><input name=\"secretCode\" style=\"width:280px;\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${appInfo.secretCode}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" maxlength=\"64\"/></span>\n");
      out.write("\t\t</dl>\n");
      out.write("\t\t<dl>\n");
      out.write("\t\t\t<b>Android平台<span>*</span></b>\n");
      out.write("\t\t\t<span><select name=\"android\" id=\"android\" >\n");
      out.write("\t\t\t\t<option value=\"1\">推送</option>\n");
      out.write("\t\t\t\t<option value=\"0\">不推送</option>\n");
      out.write("\t\t\t</select>\n");
      out.write("\t\t\t</span>\n");
      out.write("\t\t</dl>\n");
      out.write("\t\t<dl>\n");
      out.write("\t\t\t<b>IOS平台 <span>*</span></b>\n");
      out.write("\t\t\t<span><select name=\"ios\" id=\"ios\" >\n");
      out.write("\t\t\t\t<option value=\"1\">推送</option>\n");
      out.write("\t\t\t\t<option value=\"0\">不推送</option>\n");
      out.write("\t\t\t</select>\n");
      out.write("\t\t\t</span>\n");
      out.write("\t\t</dl>\n");
      out.write("\t\t<dl>\n");
      out.write("\t\t\t<b>IOS开发环境</b>\n");
      out.write("\t\t\t<span><select name=\"certificateDev\" id=\"certificateDev\" >\n");
      out.write("\t\t\t\t<option value=\"1\">开发</option>\n");
      out.write("\t\t\t\t<option value=\"0\">生产</option>\n");
      out.write("\t\t\t</select>\n");
      out.write("\t\t\t</span>\n");
      out.write("\t\t</dl>\n");
      out.write("\t\t<dl>\n");
      out.write("\t\t\t<b>IOS证书路径</b>\n");
      out.write("\t\t\t<span><input name=\"certificatePath\" style=\"width:280px;\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${appInfo.certificatePath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" maxlength=\"64\"/></span>\n");
      out.write("\t\t</dl>\n");
      out.write("\t\t</dl>\n");
      out.write("\t\t\t<b></b>\n");
      out.write("\t\t\t<span>请将IOS证书放到服务器上对应路径下</span>\n");
      out.write("\t\t<dl>\n");
      out.write("\t\t<dl>\n");
      out.write("\t\t\t<b>IOS证书密钥</b>\n");
      out.write("\t\t\t<span><input name=\"certificatePwd\" style=\"width:280px;\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${appInfo.certificatePwd}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" maxlength=\"64\"/></span>\n");
      out.write("\t\t</dl>\n");
      out.write("\t\t<dl>\n");
      out.write("\t\t\t<b>可用状态 <span>*</span></b>\n");
      out.write("\t\t\t<span><select name=\"enable\" id=\"enable\" >\n");
      out.write("\t\t\t\t<option value=\"1\">在用</option>\n");
      out.write("\t\t\t\t<option value=\"0\">停用</option>\n");
      out.write("\t\t\t</select>\n");
      out.write("\t\t</dl>\n");
      out.write("\t</form>\n");
      out.write("<script src=\"../res/js/jquery.js?v=3\"></script>\n");
      out.write("<script>\n");
      out.write("$(function(){\n");
      out.write("\tvar android = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${appInfo.android}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("';\n");
      out.write("\tif (android == true || android == 'true') {\n");
      out.write("\t\t$('#android').val('1');\n");
      out.write("\t} else {\n");
      out.write("\t\t$('#android').val('0');\n");
      out.write("\t}\n");
      out.write("\tvar ios = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${appInfo.ios}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("';\n");
      out.write("\tif (ios == true || ios == 'true') {\n");
      out.write("\t\t$('#ios').val('1');\n");
      out.write("\t} else {\n");
      out.write("\t\t$('#ios').val('0');\n");
      out.write("\t}\n");
      out.write("\tvar certificateDev = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${appInfo.certificateDev}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("';\n");
      out.write("\tif (certificateDev == true || certificateDev == 'true') {\n");
      out.write("\t\t$('#certificateDev').val('1');\n");
      out.write("\t} else {\n");
      out.write("\t\t$('#certificateDev').val('0');\n");
      out.write("\t}\n");
      out.write("\tvar enable = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${appInfo.enable}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("';\n");
      out.write("\tif (enable == true || enable == 'true') {\n");
      out.write("\t\t$('#enable').val('1');\n");
      out.write("\t} else {\n");
      out.write("\t\t$('#enable').val('0');\n");
      out.write("\t}\n");
      out.write("});\n");
      out.write("function save(){\n");
      out.write("\tvar frm=$('form:eq(0)'),appKey=frm[0].appKey.value,secretCode=frm[0].secretCode.value,packageName=frm[0].packageName.value;\n");
      out.write("\tvar ios=frm[0].ios.value,certificateDev=frm[0].certificateDev.value,certificatePath=frm[0].certificatePath.value,certificatePwd=frm[0].certificatePwd.value;\n");
      out.write("\tif($.trim(appKey)==''){\n");
      out.write("\t\ttop.tip(-1,'应用KEY不能为空');\n");
      out.write("\t}else if($.trim(secretCode)==''){\n");
      out.write("\t\ttop.tip(-1,'授权码不能为空');\n");
      out.write("\t}else if($.trim(packageName)==''){\n");
      out.write("\t\ttop.tip(-1,'应用包名不能为空');\n");
      out.write("\t}else if($.trim(ios)=='1'){\n");
      out.write("\t\tif($.trim(certificateDev)==''){\n");
      out.write("\t\t\ttop.tip(-1,'应用KEY不能为空');\n");
      out.write("\t\t}else if($.trim(certificatePath)==''){\n");
      out.write("\t\t\ttop.tip(-1,'IOS证书路径不能为空');\n");
      out.write("\t\t}else if($.trim(certificatePwd)==''){\n");
      out.write("\t\t\ttop.tip(-1,'IOS证书密钥不能为空');\n");
      out.write("\t\t}\n");
      out.write("\t\t$.post('saveAppInfo.action',frm.serialize(),function(r){\n");
      out.write("\t\t\ttop.tip(1,'保存成功！',function(){\n");
      out.write("\t\t\t\ttop.$.fn.popup({close:true});\n");
      out.write("\t\t\t\ttop.frames['mainFrame'].location.reload();\n");
      out.write("\t\t\t});\n");
      out.write("\t\t});\n");
      out.write("\t}else{\n");
      out.write("\t\t$.post('saveAppInfo.action',frm.serialize(),function(r){\n");
      out.write("\t\t\ttop.tip(1,'保存成功！',function(){\n");
      out.write("\t\t\t\ttop.$.fn.popup({close:true});\n");
      out.write("\t\t\t\ttop.frames['mainFrame'].location.reload();\n");
      out.write("\t\t\t});\n");
      out.write("\t\t});\n");
      out.write("\t}\n");
      out.write("}\n");
      out.write("</script>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
