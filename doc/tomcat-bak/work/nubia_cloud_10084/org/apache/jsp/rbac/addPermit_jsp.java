/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.20
 * Generated at: 2016-01-04 12:25:37 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.rbac;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class addPermit_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/data/wwwroot/nubia_cloud/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153356282000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1451441049000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"utf-8\">\n");
      out.write("<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n");
      out.write("<title>权限分配</title>\n");
      out.write("<link rel=\"stylesheet\" href=\"/res/bootstrap/core/bootstrap.min.css\" />\n");
      out.write("<link rel=\"stylesheet\"\n");
      out.write("\thref=\"/res/bootstrap/core/bootstrap-theme.min.css\" />\n");
      out.write("<link rel=\"stylesheet\" href=\"/res/common/common.css\" />\n");
      out.write("<link rel=\"stylesheet\"\n");
      out.write("\thref=\"/res/bootstrap-table/bootstrap-table.min.css\" />\n");
      out.write("<style>\n");
      out.write("</style>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("\t<div class=\"container-fluid\">\n");
      out.write("\t\t<h2 class=\"page-header\">权限分配</h2>\n");
      out.write("\t\t<form class=\"form-horizontal\">\n");
      out.write("\t\t\t<input type=\"hidden\" id=\"role-id\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${role.id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"> <input\n");
      out.write("\t\t\t\ttype=\"hidden\" id=\"role-menu-ids\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${menuIds}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"> <input\n");
      out.write("\t\t\t\ttype=\"hidden\" id=\"role-res-ids\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${resIds}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"> <input\n");
      out.write("\t\t\t\ttype=\"hidden\" id=\"role-res-oper-ids\" >\n");
      out.write("\t\t\t<div class=\"form-group\">\n");
      out.write("\t\t\t\t<label for=\"permit-name\" class=\"col-sm-2 control-label\">角色名称</label>\n");
      out.write("\t\t\t\t<div class=\"col-sm-8\">\n");
      out.write("\t\t\t\t\t<input type=\"text\" class=\"form-control\" disabled=\"disabled\"\n");
      out.write("\t\t\t\t\t\tvalue=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${role.name}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" id=\"role-name\">\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\t\t\t\t<div class=\"col-sm-2 error-msg\"></div>\n");
      out.write("\t\t\t</div>\n");
      out.write("\t\t\t<div class=\"form-group\">\n");
      out.write("\t\t\t\t<label for=\"role-desc\" class=\"col-sm-2 control-label\">角色描述</label>\n");
      out.write("\t\t\t\t<div class=\"col-sm-8\">\n");
      out.write("\t\t\t\t\t<input type=\"text\" class=\"form-control\" disabled=\"disabled\"\n");
      out.write("\t\t\t\t\t\tvalue=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${role.description }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" id=\"role-desc\">\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\t\t\t\t<div class=\"col-sm-2 error-msg\"></div>\n");
      out.write("\t\t\t</div>\n");
      out.write("\t\t\t<!--菜单资源分配  -->\n");
      out.write("\t\t\t<div class=\"form-group\">\n");
      out.write("\t\t\t\t<label for=\"permit-desc\" class=\"col-sm-2 control-label\">菜单资源分配</label>\n");
      out.write("\t\t\t\t<div class=\"col-sm-8\">\n");
      out.write("\t\t\t\t\t<table id=\"table-menu\" data-toggle=\"table\"\n");
      out.write("\t\t\t\t\t\tdata-click-to-select=\"true\" data-select-item-name=\"menuIds\"\n");
      out.write("\t\t\t\t\t\tdata-id-field=\"id\" data-url=\"/rbac/menu/list.do\"\n");
      out.write("\t\t\t\t\t\tdata-response-handler=\"menuResponseHandler\">\n");
      out.write("\t\t\t\t\t\t<thead>\n");
      out.write("\t\t\t\t\t\t\t<tr>\n");
      out.write("\t\t\t\t\t\t\t\t<th data-field=\"state\" data-checkbox=\"true\"></th>\n");
      out.write("\t\t\t\t\t\t\t\t<th data-field=\"id\" data-visible=\"false\">id</th>\n");
      out.write("\t\t\t\t\t\t\t\t<th data-field=\"title\">菜单名称</th>\n");
      out.write("\t\t\t\t\t\t\t\t<th data-field=\"mainHref\">主链接</th>\n");
      out.write("\t\t\t\t\t\t\t\t<th data-field=\"leftHref\">左链接</th>\n");
      out.write("\t\t\t\t\t\t\t</tr>\n");
      out.write("\t\t\t\t\t\t</thead>\n");
      out.write("\t\t\t\t\t</table>\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\t\t\t\t<div class=\"col-sm-2 error-msg\"></div>\n");
      out.write("\t\t\t</div>\n");
      out.write("\n");
      out.write("\t\t\t<!--操作资源分配  -->\n");
      out.write("\t\t\t<div class=\"form-group\">\n");
      out.write("\t\t\t\t<label for=\"permit-desc\" class=\"col-sm-2 control-label\">操作资源分配</label>\n");
      out.write("\t\t\t\t<div class=\"col-sm-8\">\n");
      out.write("\t\t\t\t\t<table id=\"table-res\" data-toggle=\"table\"\n");
      out.write("\t\t\t\t\t\tdata-select-item-name=\"resIds\"\n");
      out.write("\t\t\t\t\t\tdata-id-field=\"id\" data-url=\"/rbac/res/list.do?roleId=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${role.id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"\n");
      out.write("\t\t\t\t\t\tdata-response-handler=\"resResponseHandler\">\n");
      out.write("\t\t\t\t\t\t<thead>\n");
      out.write("\t\t\t\t\t\t\t<tr>\n");
      out.write("\t\t\t\t\t\t\t\t<th data-field=\"state\" data-checkbox=\"true\"></th>\n");
      out.write("\t\t\t\t\t\t\t\t<th data-field=\"id\" data-visible=\"false\">id</th>\n");
      out.write("\t\t\t\t\t\t\t\t<th data-field=\"title\">菜单名称</th>\n");
      out.write("\t\t\t\t\t\t\t\t<th data-field=\"mainHref\">主链接</th>\n");
      out.write("\t\t\t\t\t\t\t\t<th data-field=\"resType\">资源类型</th>\n");
      out.write("\t\t\t\t\t\t\t\t<th data-formatter=\"showRes\">资源内容</th>\n");
      out.write("\t\t\t\t\t\t\t</tr>\n");
      out.write("\t\t\t\t\t\t</thead>\n");
      out.write("\t\t\t\t\t</table>\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\t\t\t\t<div class=\"col-sm-2 error-msg\"></div>\n");
      out.write("\t\t\t</div>\n");
      out.write("\t\t\t<div class=\"form-group\">\n");
      out.write("\t\t\t\t<div class=\"col-sm-offset-2 col-sm-8\">\n");
      out.write("\t\t\t\t\t<button id=\"save-permit-btn\" type=\"button\" class=\"btn btn-primary\">提交</button>\n");
      out.write("\t\t\t\t\t<button id=\"back-btn\" type=\"button\" class=\"btn btn-default\">返回</button>\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\t\t\t</div>\n");
      out.write("\t\t\t<div class=\"modal fade\" id=\"myModal\" tabindex=\"-1\" role=\"dialog\"\n");
      out.write("\t\t\t\taria-labelledby=\"myModalLabel\" aria-hidden=\"true\">\n");
      out.write("\t\t\t\t<div class=\"modal-dialog\">\n");
      out.write("\t\t\t\t\t<div class=\"modal-content\">\n");
      out.write("\t\t\t\t\t\t<div class=\"modal-header\">\n");
      out.write("\t\t\t\t\t\t\t<button type=\"button\" class=\"close\" data-dismiss=\"modal\"\n");
      out.write("\t\t\t\t\t\t\t\taria-hidden=\"true\">×</button>\n");
      out.write("\t\t\t\t\t\t\t<h4 class=\"modal-title\" id=\"myModalLabel\">资源选择——应用列表</h4>\n");
      out.write("\t\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t\t<table id=\"table-app\" data-toggle=\"table\" data-url=\"/rbac/res/app/list.do\"\n");
      out.write("\t\t\t\t\t\t\t data-id-field=\"id\"\n");
      out.write("\t\t\t\t\t\t\tdata-response-handler=\"appResponseHandler\"\n");
      out.write("\t\t\t\t\t\t\tdata-maintain-selected = \"true\"\n");
      out.write("\t\t\t\t\t\t\tdata-height=\"360\"\n");
      out.write("\t\t\t\t\t\t\t >\n");
      out.write("\t\t\t\t\t\t\t<thead>\n");
      out.write("\t\t\t\t\t\t\t\t<tr>\n");
      out.write("\t\t\t\t\t\t\t\t\t<th data-field=\"state\" data-checkbox=\"true\"></th>\n");
      out.write("\t\t\t\t\t\t\t\t\t<th data-field=\"id\" data-visible=\"false\">id</th>\n");
      out.write("\t\t\t\t\t\t\t\t\t<th data-field=\"appName\">应用名称</th>\n");
      out.write("\t\t\t\t\t\t\t\t\t<th data-field=\"packageName\">包名</th>\n");
      out.write("\t\t\t\t\t\t\t\t\t<th data-field=\"lastestPublishVersion\">最新版本</th>\n");
      out.write("\t\t\t\t\t\t\t\t</tr>\n");
      out.write("\t\t\t\t\t\t\t</thead>\n");
      out.write("\t\t\t\t\t\t</table>\n");
      out.write("\t\t\t\t\t\t<div>\n");
      out.write("\t\t\t\t\t\t<span style=\"text-align:left;padding: 13px;\">\n");
      out.write("                            <input id=\"select-all\" type=\"checkbox\" />\n");
      out.write("                               <label style=\"text-align:left;padding: 5px;\" for=\"select-all\">全部资源(包含未来新增的资源)</label>\n");
      out.write("                            </span>\n");
      out.write("\t\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t\t<div class=\"modal-footer\">\n");
      out.write("\t\t\t\t\t\t\t<button type=\"button\" class=\"btn btn-primary\"\n");
      out.write("\t\t\t\t\t\t\t\tonclick=\"submitApp()\" data-dismiss=\"modal\">提交</button>\n");
      out.write("\t\t\t\t\t\t\t<button type=\"button\" class=\"btn btn-default\"\n");
      out.write("\t\t\t\t\t\t\t\tdata-dismiss=\"modal\">关闭</button>\n");
      out.write("\t\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t<!-- /.modal-content -->\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\t\t\t\t<!-- /.modal-dialog -->\n");
      out.write("\t\t\t</div>\n");
      out.write("\t\t</form>\n");
      out.write("\t</div>\n");
      out.write("\t<script src=\"/res/jquery.js\"></script>\n");
      out.write("\t<script src=\"/res/bootstrap/core/bootstrap.min.js\"></script>\n");
      out.write("\t<script src=\"/res/bootstrap-table/bootstrap-table.min.js\"></script>\n");
      out.write("\t<script src=\"/res/layer/layer.js\"></script>\n");
      out.write("\t<script src=\"/res/common/common.js\"></script>\n");
      out.write("\t<script src=\"/rbac/addPermit.js\"></script>\n");
      out.write("\t<script>\n");
      out.write("\t\n");
      out.write("    var resId = \"\";\n");
      out.write("    var selectIds=[];//手选的\n");
      out.write("\t\tfunction menuResponseHandler(res) {\n");
      out.write("\t\t\tmenuSelections = $(\"#role-menu-ids\").val();\n");
      out.write("\t\t\tvar menuIds = [];\n");
      out.write("\t\t\tif (menuSelections) {\n");
      out.write("\t\t\t\tmenuIds = JSON.parse(menuSelections);\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\tif(res.data) {\n");
      out.write("\t\t\t\t$.each(res.data, function(i, row) {\n");
      out.write("\t\t\t\t\trow.state = $.inArray(row.id, menuIds) !== -1;\n");
      out.write("\t\t\t\t});\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\treturn res;\n");
      out.write("\t\t}\n");
      out.write("\n");
      out.write("\t\tfunction resResponseHandler(res) {\n");
      out.write("\t\t\tresSelections = $(\"#role-res-ids\").val();\n");
      out.write("\t\t\tvar resIds = [];\n");
      out.write("\t\t\tif (resSelections) {\n");
      out.write("\t\t\t\tresIds = JSON.parse(resSelections);\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\tif(res.data) {\n");
      out.write("\t\t\t\t$.each(res.data, function(i, row) {\n");
      out.write("\t\t\t\t\trow.state = $.inArray(row.id, resIds) !== -1;\n");
      out.write("\t\t\t\t});\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\treturn res;\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\tfunction appResponseHandler(app) {\n");
      out.write("\t\t\tvar appIds = [];\n");
      out.write("\t\t\tif(app.data) {\n");
      out.write("\t\t\t\tif(selectIds == \"0\" || selectIds[0] == 0) {\n");
      out.write("\t\t\t\t\t$.each(app.data, function(i, row) {\n");
      out.write("\t                     row.state = true;\n");
      out.write("\t                });\n");
      out.write("\t\t\t\t\t$(\"#select-all\")[0].checked=true;\n");
      out.write("\t\t\t\t\treturn app;\n");
      out.write("\t            }\n");
      out.write("\t\t\t\telse {\n");
      out.write("\t\t\t\t\t$(\"#select-all\").removeAttr(\"checked\");\n");
      out.write("\t\t\t\t\t$.each(app.data, function(i, row) {\n");
      out.write("\t\t\t\t\t\t row.state = ($.inArray(row.id, selectIds) !== -1);\n");
      out.write("\t\t\t\t\t});\n");
      out.write("\t\t\t\t}    \n");
      out.write("\t\t\t}\n");
      out.write("\t\t\treturn app;\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\tfunction showRes(cellValue, record) {\n");
      out.write("\t\t\tvar html = [];\n");
      out.write("\t\t\tif(record.resRecordIds) {\n");
      out.write("\t\t\t\t html.push(\"<a data-target='#myModal' onclick='setResId(\"+record.id+\");'  data-toggle='modal' >选择资源</a>\"+\n");
      out.write("\t\t\t\t\"<span class='res-choose-\"+record.id+\"'><input type='hidden' name='resRecordIds'  value='\"+record.id+\"|\" + record.resRecordIds+\"'></span>\");\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\telse {\n");
      out.write("\t\t\t\thtml.push(\"<a data-target='#myModal' onclick='setResId(\"+record.id+\");'  data-toggle='modal' >选择资源</a>\"+\n");
      out.write("\t\t                \"<span class='res-choose-\"+record.id+\"'><input type='hidden' name='resRecordIds'> </span>\");\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\treturn html.join(\" \");\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\tfunction submitApp() {\n");
      out.write("\t\t\tif(!$('#select-all').is(\":checked\")) {\n");
      out.write("\t\t\t     $('.res-choose-'+resId).html(\"<input type='hidden' name='resRecordIds' value='\"+resId+\"|\"+selectJoin()+\"'/>\");\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\telse {\n");
      out.write("\t\t\t\t $('.res-choose-'+resId).html(\"<input type='hidden' name='resRecordIds' value='\"+resId+\"|0'/>\");\n");
      out.write("\t\t\t}\n");
      out.write("            $(\"#table-app\").bootstrapTable(\"refresh\");\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        function getAppSelections() {\n");
      out.write("            return $.map($('#table-app').bootstrapTable('getSelections'),\n");
      out.write("                    function(row) {\n");
      out.write("                        return row.id\n");
      out.write("                    });\n");
      out.write("        }\n");
      out.write("        function selectJoin() {\n");
      out.write("        \treturn selectIds.join(\",\");\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        //点击参看资源的时候\n");
      out.write("        function setResId(id) {\n");
      out.write("        \tselectIds = [];\n");
      out.write("        \tvar value = $(\".res-choose-\"+id + \" input:first-child\").val();\n");
      out.write("        \t if(value) {\n");
      out.write("        \t\t var val = value.split(\"|\")[1].split(\",\");\n");
      out.write("        \t\t for (x in val){  \n");
      out.write("        \t\t\t selectIds.push(parseInt(val[x]));  \n");
      out.write("        \t\t}\n");
      out.write("        \t } \n");
      out.write("        \t $(\"#table-app\").bootstrapTable(\"refresh\");\n");
      out.write("        \tresId = id;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        $(\"#table-app\").on('check.bs.table  check-all.bs.table', function (row,$element) {\n");
      out.write("        \tselectIds = getAppSelections();\n");
      out.write("        });\n");
      out.write("        $(\"#table-app\").on(' uncheck.bs.table uncheck-all.bs.table', function (row,$element) {\n");
      out.write("            selectIds = getAppSelections();\n");
      out.write("            $(\"#select-all\").removeAttr(\"checked\");\n");
      out.write("        });\n");
      out.write("        \n");
      out.write("        $(\"#select-all\").bind(\"click\", function(){\n");
      out.write("        \tif($(this).is(\":checked\")) {\n");
      out.write("        \t\t$('#table-app').bootstrapTable('checkAll', null);\n");
      out.write("        \t}\n");
      out.write("        \telse {\n");
      out.write("        \t\t$('#table-app').bootstrapTable('uncheckAll', null);\n");
      out.write("        \t}\n");
      out.write("        });\n");
      out.write("\t</script>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
