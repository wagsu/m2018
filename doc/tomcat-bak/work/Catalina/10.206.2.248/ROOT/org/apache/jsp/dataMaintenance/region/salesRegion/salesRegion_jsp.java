/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.20
 * Generated at: 2017-01-11 09:06:58 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.dataMaintenance.region.salesRegion;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class salesRegion_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1471862222000L));
    _jspx_dependants.put("jar:file:/data/wwwroot/channel-webapp/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153356282000L));
    _jspx_dependants.put("/WEB-INF/nubia.tld", Long.valueOf(1472004632000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!DOCTYPE html>\n");
      out.write("<html lang=\"en\">\n");
      out.write("<head>\n");
      out.write("\t<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n");
      out.write("\t<meta name=\"keywords\" content=\"jquery,ui,easy,easyui,web\">\n");
      out.write("\t<meta name=\"description\" content=\"easyui help you build your web page easily!\">\n");
      out.write("\t<title>销售区域管理</title>\n");
      out.write("\t<link rel=\"stylesheet\" type=\"text/css\" href=\"/res/jquery-easyui-1.4.4/themes/default/easyui.css\">\n");
      out.write("\t<link rel=\"stylesheet\" type=\"text/css\" href=\"/res/jquery-easyui-1.4.4/themes/icon.css\">\n");
      out.write("\t<script type=\"text/javascript\" src=\"/res/jquery-easyui-1.4.4/jquery.min.js\"></script>\n");
      out.write("\t<script type=\"text/javascript\" src=\"/res/jquery-easyui-1.4.4/jquery.easyui.min.js\"></script>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("\t<style>\n");
      out.write("\t\t@charset \"UTF-8\";\n");
      out.write("\t\tbody, h1, h2, h3, h4, h5, h6, hr, p, blockquote,\n");
      out.write("\t\tdl, dt, dd, ul, ol, li,\n");
      out.write("\t\tpre, /* text formatting elements 文本格式元素 */\n");
      out.write("\t\tform, fieldset, legend, button, input, textarea,\n");
      out.write("\t\tth, td{\n");
      out.write("\t\t  margin: 0;\n");
      out.write("\t\t  padding: 0;\n");
      out.write("\t\t}\n");
      out.write("\t\tbody,\n");
      out.write("\t\tbutton, input, select, textarea /* for ie */ {\n");
      out.write("\t\t  font: 12px/1.5 \"Hiragino Sans GB\",\"Microsoft YaHei\",\"微软雅黑\",tahoma,arial,simsun,\"宋体\", sans-serif;\n");
      out.write("\t\t}\n");
      out.write("\t\th1, h2, h3, h4, h5, h6 { font-size: 100%; }\n");
      out.write("\t\taddress, cite, dfn, em, var { font-style: normal; }\n");
      out.write("\t\tcode, kbd, pre, samp { font-family: courier new, courier, monospace; }\n");
      out.write("\t\tsmall { font-size: 12px; }\n");
      out.write("\t\tul, ol { list-style: none; }\n");
      out.write("\t\ta { text-decoration: none; }\n");
      out.write("\t\ta:hover { text-decoration: underline; }\n");
      out.write("\t\tsup { vertical-align: text-top; } \n");
      out.write("\t\tsub { vertical-align: text-bottom; }\n");
      out.write("\t\tfieldset, img { border: 0; }\n");
      out.write("\t\tbutton, input, select, textarea { font-size: 100%; }\n");
      out.write("\t\ttable { border-collapse: collapse; border-spacing: 0; }\n");
      out.write("\t\t.left{ float:left;}\n");
      out.write("\t\t.right{ float:right;}\n");
      out.write("\t\t.hidden { display: none; }\n");
      out.write("\t\t.invisible { visibility: hidden; }\n");
      out.write("\t\t.clearfix:after { content: '\\20'; display: block; height: 0; clear: both; }\n");
      out.write("\t\t.clearfix { *zoom: 1; }\n");
      out.write("\t\t.inline-block { display: inline-block; *display: inline; *zoom: 1;}\n");
      out.write("\t\ta:hover{\n");
      out.write("\t\t\tcolor: #409f73;\n");
      out.write("\t\t\ttext-decoration: none;\n");
      out.write("\t\t}\n");
      out.write("\t\tbody,html,iframe{height: 100%;}\n");
      out.write("\t\t.nav-vertical{position:relative;width: auto;height: 1000px;background: #EAEAEA;padding:5px 15px;}\n");
      out.write("\t\t.nav-content{height: 1000px;margin-top: 150px;margin-left: 50px;float: left;}\n");
      out.write("        \n");
      out.write("\t</style>\n");
      out.write("\n");
      out.write("\t<div class=\"wrap\">\n");
      out.write("\t\t<div class=\"left nav-vertical\">\n");
      out.write("\t\t\t<h2 style=\"padding-left:10px;font-size: 14px; margin-bottom: 15px; margin-top: 15px; \">区域划分角色菜单</h2>\n");
      out.write("\t\t\t<ul id=\"tt\"></ul>\n");
      out.write("\t\t</div>\n");
      out.write("\t\t<div class=\"left nav-content\" >\n");
      out.write("\t\t\t<iframe id=\"allocate_win\" src=\"/salesRegion/page/allocateAreaGuidePage/list.do\" frameborder=\"0\" width=\"600\" height=\"1080\"></iframe>\n");
      out.write("\t\t</div>\n");
      out.write("\t</div>\n");
      out.write("\t<div id=\"mm\" class=\"easyui-menu\" style=\"width:120px;\">\n");
      out.write("\t\t<div id=\"append\" data-options=\"iconCls:'icon-add'\">Append</div>\n");
      out.write("\t\t<div id=\"remove\" data-options=\"iconCls:'icon-remove'\">Remove</div>\n");
      out.write("\t\t<!-- \t\t<div class=\"menu-sep\"></div>\n");
      out.write("\t\t\t\t<div onclick=\"expand()\">Expand</div>\n");
      out.write("\t\t\t\t<div onclick=\"collapse()\">Collapse</div> -->\n");
      out.write("\t</div>\n");
      out.write("\n");
      out.write("\t\t<script type=\"text/javascript\">\n");
      out.write("\t\t\t\tvar parentId, name, sales_region_id, region_name;\n");
      out.write("\t\t\t\t$('#tt').tree({\n");
      out.write("\t\t\t\t\turl: '/salesRegion/getSalesRegionTree/list.do',\n");
      out.write("\t\t\t\t\tonClick : function(node){\n");
      out.write("                        if(node.id == 1) {\n");
      out.write("                            if(!confirm('全国销售区需要加载较长的时间，是否确认加载？'))\n");
      out.write("                                return;\n");
      out.write("                            }\n");
      out.write("\t\t\t\t\t\tvar params = {};\n");
      out.write("\t\t\t\t\t\tparams['id'] = node.id;\n");
      out.write("\t\t\t\t\t\tvar url = \"/salesRegionDevide/page/showSalesRegionDevide/list.do?\" + $.param(params),\n");
      out.write("\t\t\t\t\t\t\t$iframe = $('#allocate_win');\n");
      out.write("\t\t\t\t\t\t\t$iframe.attr('src',url);\n");
      out.write("\t\t\t\t\t},\n");
      out.write("\t\t\t\t\tonDblClick: function(node){\n");
      out.write("\t\t\t\t\t\t$(this).tree('beginEdit',node.target);\n");
      out.write("\t\t\t\t\t},\n");
      out.write("\t\t\t\t\tonAfterEdit: function(node){\n");
      out.write("\t\t\t\t\t\tsales_region_id = node.id;\n");
      out.write("\t\t\t\t\t\tregion_name = node.text;\n");
      out.write("\t\t\t\t\t\t$.ajax({\n");
      out.write("\t\t\t\t\t\t\turl: '/salesRegion/saveSalesRegion/list.do',\n");
      out.write("\t\t\t\t\t\t\ttype: 'post',\n");
      out.write("\t\t\t\t\t\t\tdata: {sales_region_id: sales_region_id, region_name: region_name},\n");
      out.write("\t\t\t\t\t\t})\n");
      out.write("\t\t\t\t\t},\n");
      out.write("\t\t\t\t\tloadFilter: function(rows){\n");
      out.write("\t\t\t\t\t\treturn convert(rows);\n");
      out.write("\t\t\t\t\t},\n");
      out.write("\t\t\t\t\tonContextMenu: function(e,node){\n");
      out.write("\t\t\t\t\t\tsales_region_id = node.id;\n");
      out.write("\t\t\t\t\t\tparentId = node.id;\n");
      out.write("\t\t\t\t\t\t\n");
      out.write("\t\t\t\t\t\te.preventDefault();\n");
      out.write("\t\t\t\t\t\t$(this).tree('select',node.target);\n");
      out.write("\t\t\t\t\t\t$('#mm').menu('show',{\n");
      out.write("\t\t\t\t\t\t\tleft: e.pageX,\n");
      out.write("\t\t\t\t\t\t\ttop: e.pageY\n");
      out.write("\t\t\t\t\t\t});\n");
      out.write("\n");
      out.write("\t\t\t\t\t\t$('#remove').on('click', function(){\n");
      out.write("\t\t\t\t\t\t\tvar node = $('#tt').tree('getSelected');\n");
      out.write("\t\t\t\t\t\t\t$('#tt').tree('remove', node.target);\n");
      out.write("\t\t\t\t\t\t\t$.ajax({\n");
      out.write("\t\t\t\t\t\t\t\turl: '/salesRegion/del/list.do',\n");
      out.write("\t\t\t\t\t\t\t\ttype: 'post',\n");
      out.write("\t\t\t\t\t\t\t\tdata: {sales_region_id: sales_region_id},\n");
      out.write("\t\t\t\t\t\t\t})\n");
      out.write("\t\t\t\t\t\t\t location.reload();\n");
      out.write("\t\t\t\t\t\t})\n");
      out.write("\t\t\t\t\t\t$('#append').on('click', function(){\n");
      out.write("\t\t\t\t\t\t\tvar t = $('#tt');\n");
      out.write("\t\t\t\t\t\t\tvar node = t.tree('getSelected');\n");
      out.write("\t\t\t\t\t\t\tname = 'undefined'+ new Date().getTime();\n");
      out.write("\t\t\t\t\t\t\tt.tree('append', {\n");
      out.write("\t\t\t\t\t\t\t\tparent: (node?node.target:null),\n");
      out.write("\t\t\t\t\t\t\t\tdata: [{\n");
      out.write("\t\t\t\t\t\t\t\t\t\"id\":-1,\n");
      out.write("\t\t\t\t\t\t\t\t\t\"name\": name\n");
      out.write("\t\t\t\t\t\t\t\t}]\n");
      out.write("\t\t\t\t\t\t\t});\t\n");
      out.write("\t\t\t\t\t\t\t$.ajax({\n");
      out.write("\t\t\t\t\t\t\t\turl: '/salesRegion/addNewSalesRegion/list.do',\n");
      out.write("\t\t\t\t\t\t\t\ttype: 'post',\n");
      out.write("\t\t\t\t\t\t\t\tdata: {parent_id: parentId, region_name: name},\n");
      out.write("\t\t\t\t\t\t\t})\n");
      out.write("\t\t\t\t\t\t\tlocation.reload();\n");
      out.write("\t\t\t\t\t\t})\n");
      out.write("\t\t\t\t\t},\n");
      out.write("\t\t\t\t});\n");
      out.write("\n");
      out.write("\t\t\t\tfunction convert(rows){\n");
      out.write("\t\t\t\t\tfunction exists(rows, parentId){\n");
      out.write("\t\t\t\t\t\tfor(var i=0; i<rows.length; i++){\n");
      out.write("\t\t\t\t\t\t\tif (rows[i].id == parentId) return true;\n");
      out.write("\t\t\t\t\t\t}\n");
      out.write("\t\t\t\t\t\treturn false;\n");
      out.write("\t\t\t\t\t}\n");
      out.write("\t\t\t\t\t\n");
      out.write("\t\t\t\t\tvar nodes = [];\n");
      out.write("\t\t\t\t\t// get the top level nodes\n");
      out.write("\t\t\t\t\tfor(var i=0; i<rows.length; i++){\n");
      out.write("\t\t\t\t\t\tvar row = rows[i];\n");
      out.write("\t\t\t\t\t\tif (!exists(rows, row.parentId)){\n");
      out.write("\t\t\t\t\t\t\tnodes.push({\n");
      out.write("\t\t\t\t\t\t\t\tid:row.id,\n");
      out.write("\t\t\t\t\t\t\t\ttext:row.name\n");
      out.write("\t\t\t\t\t\t\t});\n");
      out.write("\t\t\t\t\t\t}\n");
      out.write("\t\t\t\t\t}\n");
      out.write("\t\t\t\t\t\n");
      out.write("\t\t\t\t\tvar toDo = [];\n");
      out.write("\t\t\t\t\tfor(var i=0; i<nodes.length; i++){\n");
      out.write("\t\t\t\t\t\ttoDo.push(nodes[i]);\n");
      out.write("\t\t\t\t\t}\n");
      out.write("\t\t\t\t\twhile(toDo.length){\n");
      out.write("\t\t\t\t\t\tvar node = toDo.shift();\t// the parent node\n");
      out.write("\t\t\t\t\t\t// get the children nodes\n");
      out.write("\t\t\t\t\t\tfor(var i=0; i<rows.length; i++){\n");
      out.write("\t\t\t\t\t\t\tvar row = rows[i];\n");
      out.write("\t\t\t\t\t\t\tif (row.parentId == node.id){\n");
      out.write("\t\t\t\t\t\t\t\tvar child = {id:row.id,text:row.name};\n");
      out.write("\t\t\t\t\t\t\t\tif (node.children){\n");
      out.write("\t\t\t\t\t\t\t\t\tnode.children.push(child);\n");
      out.write("\t\t\t\t\t\t\t\t} else {\n");
      out.write("\t\t\t\t\t\t\t\t\tnode.children = [child];\n");
      out.write("\t\t\t\t\t\t\t\t}\n");
      out.write("\t\t\t\t\t\t\t\ttoDo.push(child);\n");
      out.write("\t\t\t\t\t\t\t}\n");
      out.write("\t\t\t\t\t\t}\n");
      out.write("\t\t\t\t\t}\n");
      out.write("\t\t\t\t\treturn nodes;\n");
      out.write("\t\t\t\t}\n");
      out.write("\n");
      out.write("\t</script>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
